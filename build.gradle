import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
  	id "org.jetbrains.kotlin.jvm" version "2.1.0"
	id "org.jetbrains.kotlin.plugin.serialization" version "2.1.0"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven { url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1" }
	maven { url "https://repo.nea.moe/mirror" }
	maven { url "https://repo.nea.moe/releases/" }
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }
	maven { url = "https://jitpack.io/" }
    maven {
        url "https://api.modrinth.com/maven"
        content {
            includeGroup("maven.modrinth")
        }
    }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"
	modRuntimeOnly("me.djtheredstoner:DevAuth-fabric:${project.devAuth_version}")
	implementation "meteordevelopment:orbit:${project.orbit_version}"
	include "meteordevelopment:orbit:${project.orbit_version}"
	modApi "me.shedaniel.cloth:cloth-config-fabric:${project.clothConfig_version}"
	include "me.shedaniel.cloth:cloth-config-fabric:${project.clothConfig_version}"
	modImplementation("moe.nea.jarvis:jarvis-api:${project.jarvis_version}")
	include("moe.nea.jarvis:jarvis-fabric:${project.jarvis_version}")
	modLocalRuntime("moe.nea.jarvis:jarvis-fabric:${project.jarvis_version}")
    modImplementation "maven.modrinth:modmenu:${project.modMenu_version}"
    modLocalRuntime "maven.modrinth:modmenu:${project.modMenu_version}"
}

loom {
	runs {
		removeIf { it.name != "client" }
		named("client") {
			property("devauth.enabled", "true")
			property("fabric.log.level", "info")
			vmArg("-ea")
			/*vmArg("-XX:+AllowEnhancedClassRedefinition")*/
		    /*vmArg("-XX:HotswapAgent=external")
			vmArg("-javaagent:/home/ronald/Software-Packages/hotswap-agent-1.4.2-SNAPSHOT.jar")*/
		}
	}
	accessWidenerPath = file("src/main/resources/dulkirmod.accesswidener")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 21
}

tasks.withType(KotlinCompile).configureEach {
	kotlinOptions.jvmTarget = 21
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}"}
	}
}